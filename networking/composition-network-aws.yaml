---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xnetworks.aws.platform.example.com
  labels:
    provider: aws
    service: network
    app.kubernetes.io/managed-by: argocd
spec:
  compositeTypeRef:
    apiVersion: platform.example.com/v1alpha1
    kind: XNetwork
  
  mode: Pipeline
  pipeline:
  - step: patch-and-transform
    functionRef:
      name: function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      kind: Resources
      resources:
      
      # VPC
      - name: vpc
        base:
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: VPC
          spec:
            forProvider:
              enableDnsHostnames: true
              enableDnsSupport: true
              tags:
                ManagedBy: "crossplane"
        
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.cidrBlock
          toFieldPath: spec.forProvider.cidrBlock
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.enableDnsHostnames
          toFieldPath: spec.forProvider.enableDnsHostnames
        - type: FromCompositeFieldPath
          fromFieldPath: spec.enableDnsSupport
          toFieldPath: spec.forProvider.enableDnsSupport
        
        # Tags
        - type: FromCompositeFieldPath
          fromFieldPath: spec.environment
          toFieldPath: spec.forProvider.tags.Environment
        - type: FromCompositeFieldPath
          fromFieldPath: spec.costCenter
          toFieldPath: spec.forProvider.tags.CostCenter
        - type: FromCompositeFieldPath
          fromFieldPath: spec.owner
          toFieldPath: spec.forProvider.tags.Owner
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.labels[crossplane.io/claim-name]
          toFieldPath: spec.forProvider.tags.Name
        
        # Status
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: status.vpcId
      
      # Internet Gateway
      - name: internet-gateway
        base:
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: InternetGateway
          spec:
            forProvider:
              vpcIdSelector:
                matchControllerRef: true
              tags:
                ManagedBy: "crossplane"
        
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.labels[crossplane.io/claim-name]
          toFieldPath: spec.forProvider.tags.Name
          transforms:
          - type: string
            string:
              fmt: "%s-igw"
      
      # Public Route Table
      - name: public-route-table
        base:
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: RouteTable
          spec:
            forProvider:
              vpcIdSelector:
                matchControllerRef: true
              tags:
                ManagedBy: "crossplane"
                Type: "public"
        
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.labels[crossplane.io/claim-name]
          toFieldPath: spec.forProvider.tags.Name
          transforms:
          - type: string
            string:
              fmt: "%s-public-rt"
      
      # Public Route (to Internet Gateway)
      - name: public-route
        base:
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: Route
          spec:
            forProvider:
              destinationCidrBlock: 0.0.0.0/0
              gatewayIdSelector:
                matchControllerRef: true
              routeTableIdSelector:
                matchControllerRef: true
                matchLabels:
                  Type: "public"
        
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
      
      # Private Route Table
      - name: private-route-table
        base:
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: RouteTable
          spec:
            forProvider:
              vpcIdSelector:
                matchControllerRef: true
              tags:
                ManagedBy: "crossplane"
                Type: "private"
        
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.labels[crossplane.io/claim-name]
          toFieldPath: spec.forProvider.tags.Name
          transforms:
          - type: string
            string:
              fmt: "%s-private-rt"

