---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xnetworks.aws.platform.example.com
  labels:
    provider: aws
    service: network
    app.kubernetes.io/managed-by: argocd
spec:
  compositeTypeRef:
    apiVersion: platform.example.com/v1alpha1
    kind: XNetwork
  
  mode: Pipeline
  pipeline:
  - step: patch-and-transform
    functionRef:
      name: function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      kind: Resources
      resources:
      
      # VPC
      - name: vpc
        base:
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: VPC
          spec:
            forProvider:
              enableDnsHostnames: true
              enableDnsSupport: true
              tags:
                ManagedBy: "crossplane"
            providerConfigRef:
              name: aws-default
        
        patches:
        # Override manual tem prioridade
        - type: FromCompositeFieldPath
          fromFieldPath: spec.providerConfigName
          toFieldPath: spec.providerConfigRef.name
          policy:
            fromFieldPath: Optional
        
        # Selecionar ProviderConfig baseado no ambiente
        - type: FromCompositeFieldPath
          fromFieldPath: spec.environment
          toFieldPath: spec.providerConfigRef.name
          transforms:
          - type: map
            map:
              dev: aws-dev
              hlm: aws-hml
              staging: aws-default
              prod: aws-prod
          policy:
            fromFieldPath: Required
        
        - type: FromCompositeFieldPath
          fromFieldPath: spec.cidrBlock
          toFieldPath: spec.forProvider.cidrBlock
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.enableDnsHostnames
          toFieldPath: spec.forProvider.enableDnsHostnames
        - type: FromCompositeFieldPath
          fromFieldPath: spec.enableDnsSupport
          toFieldPath: spec.forProvider.enableDnsSupport
        
        # Tags
        - type: FromCompositeFieldPath
          fromFieldPath: spec.environment
          toFieldPath: spec.forProvider.tags.Environment
        - type: FromCompositeFieldPath
          fromFieldPath: spec.costCenter
          toFieldPath: spec.forProvider.tags.CostCenter
        - type: FromCompositeFieldPath
          fromFieldPath: spec.owner
          toFieldPath: spec.forProvider.tags.Owner
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.labels[crossplane.io/claim-name]
          toFieldPath: spec.forProvider.tags.Name
        
        # Status
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: status.vpcId
      
      # Internet Gateway
      - name: internet-gateway
        base:
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: InternetGateway
          spec:
            forProvider:
              vpcIdSelector:
                matchControllerRef: true
              tags:
                ManagedBy: "crossplane"
            providerConfigRef:
              name: aws-default
        
        patches:
        # ProviderConfig patches (mesmo padr√£o do VPC)
        - type: FromCompositeFieldPath
          fromFieldPath: spec.providerConfigName
          toFieldPath: spec.providerConfigRef.name
          policy:
            fromFieldPath: Optional
        - type: FromCompositeFieldPath
          fromFieldPath: spec.environment
          toFieldPath: spec.providerConfigRef.name
          transforms:
          - type: map
            map:
              dev: aws-dev
              hlm: aws-hml
              staging: aws-default
              prod: aws-prod
          policy:
            fromFieldPath: Required
        
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.labels[crossplane.io/claim-name]
          toFieldPath: spec.forProvider.tags.Name
          transforms:
          - type: string
            string:
              type: Format
              fmt: "%s-igw"
      
      # Public Route Table
      - name: public-route-table
        base:
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: RouteTable
          spec:
            forProvider:
              vpcIdSelector:
                matchControllerRef: true
              tags:
                ManagedBy: "crossplane"
                Type: "public"
            providerConfigRef:
              name: aws-default
        
        patches:
        # ProviderConfig patches
        - type: FromCompositeFieldPath
          fromFieldPath: spec.providerConfigName
          toFieldPath: spec.providerConfigRef.name
          policy:
            fromFieldPath: Optional
        - type: FromCompositeFieldPath
          fromFieldPath: spec.environment
          toFieldPath: spec.providerConfigRef.name
          transforms:
          - type: map
            map:
              dev: aws-dev
              hlm: aws-hml
              staging: aws-default
              prod: aws-prod
          policy:
            fromFieldPath: Required
        
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.labels[crossplane.io/claim-name]
          toFieldPath: spec.forProvider.tags.Name
          transforms:
          - type: string
            string:
              type: Format
              fmt: "%s-public-rt"
      
      # Public Route (to Internet Gateway)
      - name: public-route
        base:
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: Route
          spec:
            forProvider:
              destinationCidrBlock: 0.0.0.0/0
              gatewayIdSelector:
                matchControllerRef: true
              routeTableIdSelector:
                matchControllerRef: true
                matchLabels:
                  Type: "public"
            providerConfigRef:
              name: aws-default
        
        patches:
        # ProviderConfig patches
        - type: FromCompositeFieldPath
          fromFieldPath: spec.providerConfigName
          toFieldPath: spec.providerConfigRef.name
          policy:
            fromFieldPath: Optional
        - type: FromCompositeFieldPath
          fromFieldPath: spec.environment
          toFieldPath: spec.providerConfigRef.name
          transforms:
          - type: map
            map:
              dev: aws-dev
              hlm: aws-hml
              staging: aws-default
              prod: aws-prod
          policy:
            fromFieldPath: Required
        
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
      
      # Private Route Table
      - name: private-route-table
        base:
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: RouteTable
          spec:
            forProvider:
              vpcIdSelector:
                matchControllerRef: true
              tags:
                ManagedBy: "crossplane"
                Type: "private"
            providerConfigRef:
              name: aws-default
        
        patches:
        # ProviderConfig patches
        - type: FromCompositeFieldPath
          fromFieldPath: spec.providerConfigName
          toFieldPath: spec.providerConfigRef.name
          policy:
            fromFieldPath: Optional
        - type: FromCompositeFieldPath
          fromFieldPath: spec.environment
          toFieldPath: spec.providerConfigRef.name
          transforms:
          - type: map
            map:
              dev: aws-dev
              hlm: aws-hml
              staging: aws-default
              prod: aws-prod
          policy:
            fromFieldPath: Required
        
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.labels[crossplane.io/claim-name]
          toFieldPath: spec.forProvider.tags.Name
          transforms:
          - type: string
            string:
              type: Format
              fmt: "%s-private-rt"
      
      # Public Subnet 1
      - name: public-subnet-1
        base:
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: Subnet
          spec:
            forProvider:
              vpcIdSelector:
                matchControllerRef: true
              mapPublicIpOnLaunch: true
              tags:
                ManagedBy: "crossplane"
                Type: "public"
                Name: "public-subnet-1"
            providerConfigRef:
              name: aws-default
        
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.providerConfigName
          toFieldPath: spec.providerConfigRef.name
          policy:
            fromFieldPath: Optional
        - type: FromCompositeFieldPath
          fromFieldPath: spec.environment
          toFieldPath: spec.providerConfigRef.name
          transforms:
          - type: map
            map:
              dev: aws-dev
              hlm: aws-hml
              staging: aws-default
              prod: aws-prod
          policy:
            fromFieldPath: Required
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.subnets.public[0].cidrBlock
          toFieldPath: spec.forProvider.cidrBlock
        - type: FromCompositeFieldPath
          fromFieldPath: spec.subnets.public[0].availabilityZone
          toFieldPath: spec.forProvider.availabilityZone
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.labels[crossplane.io/claim-name]
          toFieldPath: spec.forProvider.tags.Name
          transforms:
          - type: string
            string:
              type: Format
              fmt: "%s-public-subnet-1"
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: status.publicSubnetIds[0]
      
      # Public Subnet 2
      - name: public-subnet-2
        base:
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: Subnet
          spec:
            forProvider:
              vpcIdSelector:
                matchControllerRef: true
              mapPublicIpOnLaunch: true
              tags:
                ManagedBy: "crossplane"
                Type: "public"
                Name: "public-subnet-2"
            providerConfigRef:
              name: aws-default
        
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.providerConfigName
          toFieldPath: spec.providerConfigRef.name
          policy:
            fromFieldPath: Optional
        - type: FromCompositeFieldPath
          fromFieldPath: spec.environment
          toFieldPath: spec.providerConfigRef.name
          transforms:
          - type: map
            map:
              dev: aws-dev
              hlm: aws-hml
              staging: aws-default
              prod: aws-prod
          policy:
            fromFieldPath: Required
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.subnets.public[1].cidrBlock
          toFieldPath: spec.forProvider.cidrBlock
        - type: FromCompositeFieldPath
          fromFieldPath: spec.subnets.public[1].availabilityZone
          toFieldPath: spec.forProvider.availabilityZone
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.labels[crossplane.io/claim-name]
          toFieldPath: spec.forProvider.tags.Name
          transforms:
          - type: string
            string:
              type: Format
              fmt: "%s-public-subnet-2"
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: status.publicSubnetIds[1]
      
      # Private Subnet 1
      - name: private-subnet-1
        base:
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: Subnet
          spec:
            forProvider:
              vpcIdSelector:
                matchControllerRef: true
              mapPublicIpOnLaunch: false
              tags:
                ManagedBy: "crossplane"
                Type: "private"
                Name: "private-subnet-1"
            providerConfigRef:
              name: aws-default
        
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.providerConfigName
          toFieldPath: spec.providerConfigRef.name
          policy:
            fromFieldPath: Optional
        - type: FromCompositeFieldPath
          fromFieldPath: spec.environment
          toFieldPath: spec.providerConfigRef.name
          transforms:
          - type: map
            map:
              dev: aws-dev
              hlm: aws-hml
              staging: aws-default
              prod: aws-prod
          policy:
            fromFieldPath: Required
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.subnets.private[0].cidrBlock
          toFieldPath: spec.forProvider.cidrBlock
        - type: FromCompositeFieldPath
          fromFieldPath: spec.subnets.private[0].availabilityZone
          toFieldPath: spec.forProvider.availabilityZone
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.labels[crossplane.io/claim-name]
          toFieldPath: spec.forProvider.tags.Name
          transforms:
          - type: string
            string:
              type: Format
              fmt: "%s-private-subnet-1"
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: status.privateSubnetIds[0]
      
      # Private Subnet 2
      - name: private-subnet-2
        base:
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: Subnet
          spec:
            forProvider:
              vpcIdSelector:
                matchControllerRef: true
              mapPublicIpOnLaunch: false
              tags:
                ManagedBy: "crossplane"
                Type: "private"
                Name: "private-subnet-2"
            providerConfigRef:
              name: aws-default
        
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.providerConfigName
          toFieldPath: spec.providerConfigRef.name
          policy:
            fromFieldPath: Optional
        - type: FromCompositeFieldPath
          fromFieldPath: spec.environment
          toFieldPath: spec.providerConfigRef.name
          transforms:
          - type: map
            map:
              dev: aws-dev
              hlm: aws-hml
              staging: aws-default
              prod: aws-prod
          policy:
            fromFieldPath: Required
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.subnets.private[1].cidrBlock
          toFieldPath: spec.forProvider.cidrBlock
        - type: FromCompositeFieldPath
          fromFieldPath: spec.subnets.private[1].availabilityZone
          toFieldPath: spec.forProvider.availabilityZone
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.labels[crossplane.io/claim-name]
          toFieldPath: spec.forProvider.tags.Name
          transforms:
          - type: string
            string:
              type: Format
              fmt: "%s-private-subnet-2"
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: status.privateSubnetIds[1]
      
      # Route Table Association - Public Subnet 1
      - name: public-rta-1
        base:
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: RouteTableAssociation
          spec:
            forProvider:
              routeTableIdSelector:
                matchControllerRef: true
                matchLabels:
                  Type: "public"
              subnetIdSelector:
                matchControllerRef: true
                matchLabels:
                  Name: "public-subnet-1"
            providerConfigRef:
              name: aws-default
        
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.providerConfigName
          toFieldPath: spec.providerConfigRef.name
          policy:
            fromFieldPath: Optional
        - type: FromCompositeFieldPath
          fromFieldPath: spec.environment
          toFieldPath: spec.providerConfigRef.name
          transforms:
          - type: map
            map:
              dev: aws-dev
              hlm: aws-hml
              staging: aws-default
              prod: aws-prod
          policy:
            fromFieldPath: Required
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
      
      # Route Table Association - Public Subnet 2
      - name: public-rta-2
        base:
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: RouteTableAssociation
          spec:
            forProvider:
              routeTableIdSelector:
                matchControllerRef: true
                matchLabels:
                  Type: "public"
              subnetIdSelector:
                matchControllerRef: true
                matchLabels:
                  Name: "public-subnet-2"
            providerConfigRef:
              name: aws-default
        
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.providerConfigName
          toFieldPath: spec.providerConfigRef.name
          policy:
            fromFieldPath: Optional
        - type: FromCompositeFieldPath
          fromFieldPath: spec.environment
          toFieldPath: spec.providerConfigRef.name
          transforms:
          - type: map
            map:
              dev: aws-dev
              hlm: aws-hml
              staging: aws-default
              prod: aws-prod
          policy:
            fromFieldPath: Required
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
      
      # Route Table Association - Private Subnet 1
      - name: private-rta-1
        base:
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: RouteTableAssociation
          spec:
            forProvider:
              routeTableIdSelector:
                matchControllerRef: true
                matchLabels:
                  Type: "private"
              subnetIdSelector:
                matchControllerRef: true
                matchLabels:
                  Name: "private-subnet-1"
            providerConfigRef:
              name: aws-default
        
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.providerConfigName
          toFieldPath: spec.providerConfigRef.name
          policy:
            fromFieldPath: Optional
        - type: FromCompositeFieldPath
          fromFieldPath: spec.environment
          toFieldPath: spec.providerConfigRef.name
          transforms:
          - type: map
            map:
              dev: aws-dev
              hlm: aws-hml
              staging: aws-default
              prod: aws-prod
          policy:
            fromFieldPath: Required
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region
      
      # Route Table Association - Private Subnet 2
      - name: private-rta-2
        base:
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: RouteTableAssociation
          spec:
            forProvider:
              routeTableIdSelector:
                matchControllerRef: true
                matchLabels:
                  Type: "private"
              subnetIdSelector:
                matchControllerRef: true
                matchLabels:
                  Name: "private-subnet-2"
            providerConfigRef:
              name: aws-default
        
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.providerConfigName
          toFieldPath: spec.providerConfigRef.name
          policy:
            fromFieldPath: Optional
        - type: FromCompositeFieldPath
          fromFieldPath: spec.environment
          toFieldPath: spec.providerConfigRef.name
          transforms:
          - type: map
            map:
              dev: aws-dev
              hlm: aws-hml
              staging: aws-default
              prod: aws-prod
          policy:
            fromFieldPath: Required
        - type: FromCompositeFieldPath
          fromFieldPath: spec.region
          toFieldPath: spec.forProvider.region

